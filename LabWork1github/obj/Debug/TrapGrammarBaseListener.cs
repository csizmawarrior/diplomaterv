//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\G4 files\TrapGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ITrapGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class TrapGrammarBaseListener : ITrapGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinition([NotNull] TrapGrammarParser.DefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinition([NotNull] TrapGrammarParser.DefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] TrapGrammarParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] TrapGrammarParser.NameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] TrapGrammarParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] TrapGrammarParser.StatementListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] TrapGrammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] TrapGrammarParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.nameDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameDeclaration([NotNull] TrapGrammarParser.NameDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.nameDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameDeclaration([NotNull] TrapGrammarParser.NameDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.effectDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEffectDeclaration([NotNull] TrapGrammarParser.EffectDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.effectDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEffectDeclaration([NotNull] TrapGrammarParser.EffectDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.moveData"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMoveData([NotNull] TrapGrammarParser.MoveDataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.moveData"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMoveData([NotNull] TrapGrammarParser.MoveDataContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.effect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEffect([NotNull] TrapGrammarParser.EffectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.effect"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEffect([NotNull] TrapGrammarParser.EffectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.damage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDamage([NotNull] TrapGrammarParser.DamageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.damage"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDamage([NotNull] TrapGrammarParser.DamageContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.heal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHeal([NotNull] TrapGrammarParser.HealContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.heal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHeal([NotNull] TrapGrammarParser.HealContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.monsterSpawn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMonsterSpawn([NotNull] TrapGrammarParser.MonsterSpawnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.monsterSpawn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMonsterSpawn([NotNull] TrapGrammarParser.MonsterSpawnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.teleport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTeleport([NotNull] TrapGrammarParser.TeleportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.teleport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTeleport([NotNull] TrapGrammarParser.TeleportContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.rangeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeDeclaration([NotNull] TrapGrammarParser.RangeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.rangeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeDeclaration([NotNull] TrapGrammarParser.RangeDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.moveRoundDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMoveRoundDeclaration([NotNull] TrapGrammarParser.MoveRoundDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.moveRoundDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMoveRoundDeclaration([NotNull] TrapGrammarParser.MoveRoundDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.place"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlace([NotNull] TrapGrammarParser.PlaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.place"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlace([NotNull] TrapGrammarParser.PlaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.x"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterX([NotNull] TrapGrammarParser.XContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.x"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitX([NotNull] TrapGrammarParser.XContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="TrapGrammarParser.y"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterY([NotNull] TrapGrammarParser.YContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="TrapGrammarParser.y"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitY([NotNull] TrapGrammarParser.YContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace LabWork1github
