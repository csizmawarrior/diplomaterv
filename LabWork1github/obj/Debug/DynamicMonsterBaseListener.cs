//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\Source\Repos\LabWork1github\LabWork1github\G4 files\DynamicMonster.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IDynamicMonsterListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DynamicMonsterBaseListener : IDynamicMonsterListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinition([NotNull] DynamicMonsterParser.DefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.definition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinition([NotNull] DynamicMonsterParser.DefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] DynamicMonsterParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] DynamicMonsterParser.NameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] DynamicMonsterParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] DynamicMonsterParser.StatementListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] DynamicMonsterParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] DynamicMonsterParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.nameDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameDeclaration([NotNull] DynamicMonsterParser.NameDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.nameDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameDeclaration([NotNull] DynamicMonsterParser.NameDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.healthDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHealthDeclaration([NotNull] DynamicMonsterParser.HealthDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.healthDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHealthDeclaration([NotNull] DynamicMonsterParser.HealthDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.damageDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDamageDeclaration([NotNull] DynamicMonsterParser.DamageDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.damageDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDamageDeclaration([NotNull] DynamicMonsterParser.DamageDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.distanceDeclare"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDistanceDeclare([NotNull] DynamicMonsterParser.DistanceDeclareContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.distanceDeclare"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDistanceDeclare([NotNull] DynamicMonsterParser.DistanceDeclareContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.moveDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMoveDeclaration([NotNull] DynamicMonsterParser.MoveDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.moveDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMoveDeclaration([NotNull] DynamicMonsterParser.MoveDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.shootDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShootDeclaration([NotNull] DynamicMonsterParser.ShootDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.shootDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShootDeclaration([NotNull] DynamicMonsterParser.ShootDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.ifexpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfexpression([NotNull] DynamicMonsterParser.IfexpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.ifexpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfexpression([NotNull] DynamicMonsterParser.IfexpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.whileexpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileexpression([NotNull] DynamicMonsterParser.WhileexpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.whileexpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileexpression([NotNull] DynamicMonsterParser.WhileexpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] DynamicMonsterParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] DynamicMonsterParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.character"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharacter([NotNull] DynamicMonsterParser.CharacterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.character"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharacter([NotNull] DynamicMonsterParser.CharacterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.possibleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPossibleAttributes([NotNull] DynamicMonsterParser.PossibleAttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.possibleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPossibleAttributes([NotNull] DynamicMonsterParser.PossibleAttributesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.place"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPlace([NotNull] DynamicMonsterParser.PlaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.place"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPlace([NotNull] DynamicMonsterParser.PlaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.x"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterX([NotNull] DynamicMonsterParser.XContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.x"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitX([NotNull] DynamicMonsterParser.XContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.y"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterY([NotNull] DynamicMonsterParser.YContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.y"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitY([NotNull] DynamicMonsterParser.YContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] DynamicMonsterParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] DynamicMonsterParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.something"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSomething([NotNull] DynamicMonsterParser.SomethingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.something"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSomething([NotNull] DynamicMonsterParser.SomethingContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicMonsterParser.operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperation([NotNull] DynamicMonsterParser.OperationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicMonsterParser.operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperation([NotNull] DynamicMonsterParser.OperationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace LabWork1github
