//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\DynamicTrap.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="DynamicTrapParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IDynamicTrapVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] DynamicTrapParser.DefinitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName([NotNull] DynamicTrapParser.NameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] DynamicTrapParser.StatementListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] DynamicTrapParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.damageDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDamageDeclaration([NotNull] DynamicTrapParser.DamageDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.healDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHealDeclaration([NotNull] DynamicTrapParser.HealDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.spawnDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSpawnDeclaration([NotNull] DynamicTrapParser.SpawnDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.teleport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTeleport([NotNull] DynamicTrapParser.TeleportContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.moveDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMoveDeclaration([NotNull] DynamicTrapParser.MoveDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameDeclaration([NotNull] DynamicTrapParser.NameDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.damageDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDamageDeclare([NotNull] DynamicTrapParser.DamageDeclareContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.healDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHealDeclare([NotNull] DynamicTrapParser.HealDeclareContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.distanceDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDistanceDeclare([NotNull] DynamicTrapParser.DistanceDeclareContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.ifexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfexpression([NotNull] DynamicTrapParser.IfexpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.whileexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileexpression([NotNull] DynamicTrapParser.WhileexpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] DynamicTrapParser.BlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCharacter([NotNull] DynamicTrapParser.CharacterContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.possibleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPossibleAttributes([NotNull] DynamicTrapParser.PossibleAttributesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlace([NotNull] DynamicTrapParser.PlaceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.x"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitX([NotNull] DynamicTrapParser.XContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.y"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitY([NotNull] DynamicTrapParser.YContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] DynamicTrapParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.something"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSomething([NotNull] DynamicTrapParser.SomethingContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="DynamicTrapParser.operation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperation([NotNull] DynamicTrapParser.OperationContext context);
}
} // namespace LabWork1github
