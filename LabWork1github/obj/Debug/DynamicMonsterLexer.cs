//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\DynamicMonster.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DynamicMonsterLexer : Lexer {
	public const int
		RANDOM=1, DISTANCE=2, DAMAGE=3, DIRECTION=4, NAME_T=5, RANGE_T=6, IN=7, 
		TRAP=8, PLAYER=9, PLACE_T=10, ROUND=11, ME=12, IF=13, TO=14, WHILE=15, 
		HEALTH=16, ALIVE=17, MOVE=18, SHOOT=19, EQUALS=20, EXPRESSIONCONNECTER=21, 
		COMPARE=22, NUMOPERATION=23, PARENTHESISSTART=24, PARENTHESISCLOSE=25, 
		BRACKETCLOSE=26, BRACKETSTART=27, COLON=28, SEMI=29, COMMA=30, ATTRIBUTE=31, 
		NUMBER=32, ID=33, WS=34;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"RANDOM", "DISTANCE", "DAMAGE", "DIRECTION", "NAME_T", "RANGE_T", "IN", 
		"TRAP", "PLAYER", "PLACE_T", "ROUND", "ME", "IF", "TO", "WHILE", "HEALTH", 
		"ALIVE", "MOVE", "SHOOT", "EQUALS", "EXPRESSIONCONNECTER", "COMPARE", 
		"NUMOPERATION", "PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", 
		"BRACKETSTART", "COLON", "SEMI", "COMMA", "ATTRIBUTE", "NUMBER", "ID", 
		"WS"
	};


	public DynamicMonsterLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'random'", "'distance'", "'damage'", null, "'name'", "'range'", 
		"'in'", "'trap'", "'player'", "'place'", "'round'", "'me'", "'if'", "'to'", 
		"'while'", "'HP'", "'alive'", "'move'", "'shoot'", "'='", null, null, 
		null, "'('", "')'", "'}'", "'{'", "':'", "';'", "','", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "RANDOM", "DISTANCE", "DAMAGE", "DIRECTION", "NAME_T", "RANGE_T", 
		"IN", "TRAP", "PLAYER", "PLACE_T", "ROUND", "ME", "IF", "TO", "WHILE", 
		"HEALTH", "ALIVE", "MOVE", "SHOOT", "EQUALS", "EXPRESSIONCONNECTER", "COMPARE", 
		"NUMOPERATION", "PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", 
		"BRACKETSTART", "COLON", "SEMI", "COMMA", "ATTRIBUTE", "NUMBER", "ID", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DynamicMonster.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2$\xDA\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a"+
		"\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n"+
		"\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f"+
		"\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3"+
		"\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3"+
		"\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3"+
		"\x16\x3\x16\x5\x16\xB0\n\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x5\x17"+
		"\xB7\n\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3"+
		"\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x6!"+
		"\xCC\n!\r!\xE!\xCD\x3\"\x3\"\a\"\xD2\n\"\f\"\xE\"\xD5\v\"\x3#\x3#\x3#"+
		"\x3#\x2\x2\x2$\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t"+
		"\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F"+
		"\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19"+
		"\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?"+
		"\x2!\x41\x2\"\x43\x2#\x45\x2$\x3\x2\t\x6\x2\x44\x44HHNNTT\x4\x2>>@@\x6"+
		"\x2\'\',-//\x31\x31\x3\x2\x32;\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61\x61"+
		"\x63|\x5\x2\v\f\xF\xF\"\"\xDE\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a"+
		"\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x3G\x3\x2\x2\x2\x5N\x3\x2\x2\x2\aW\x3\x2\x2\x2\t^\x3\x2\x2\x2\v`\x3"+
		"\x2\x2\x2\r\x65\x3\x2\x2\x2\xFk\x3\x2\x2\x2\x11n\x3\x2\x2\x2\x13s\x3\x2"+
		"\x2\x2\x15z\x3\x2\x2\x2\x17\x80\x3\x2\x2\x2\x19\x86\x3\x2\x2\x2\x1B\x89"+
		"\x3\x2\x2\x2\x1D\x8C\x3\x2\x2\x2\x1F\x8F\x3\x2\x2\x2!\x95\x3\x2\x2\x2"+
		"#\x98\x3\x2\x2\x2%\x9E\x3\x2\x2\x2\'\xA3\x3\x2\x2\x2)\xA9\x3\x2\x2\x2"+
		"+\xAF\x3\x2\x2\x2-\xB6\x3\x2\x2\x2/\xB8\x3\x2\x2\x2\x31\xBA\x3\x2\x2\x2"+
		"\x33\xBC\x3\x2\x2\x2\x35\xBE\x3\x2\x2\x2\x37\xC0\x3\x2\x2\x2\x39\xC2\x3"+
		"\x2\x2\x2;\xC4\x3\x2\x2\x2=\xC6\x3\x2\x2\x2?\xC8\x3\x2\x2\x2\x41\xCB\x3"+
		"\x2\x2\x2\x43\xCF\x3\x2\x2\x2\x45\xD6\x3\x2\x2\x2GH\at\x2\x2HI\a\x63\x2"+
		"\x2IJ\ap\x2\x2JK\a\x66\x2\x2KL\aq\x2\x2LM\ao\x2\x2M\x4\x3\x2\x2\x2NO\a"+
		"\x66\x2\x2OP\ak\x2\x2PQ\au\x2\x2QR\av\x2\x2RS\a\x63\x2\x2ST\ap\x2\x2T"+
		"U\a\x65\x2\x2UV\ag\x2\x2V\x6\x3\x2\x2\x2WX\a\x66\x2\x2XY\a\x63\x2\x2Y"+
		"Z\ao\x2\x2Z[\a\x63\x2\x2[\\\ai\x2\x2\\]\ag\x2\x2]\b\x3\x2\x2\x2^_\t\x2"+
		"\x2\x2_\n\x3\x2\x2\x2`\x61\ap\x2\x2\x61\x62\a\x63\x2\x2\x62\x63\ao\x2"+
		"\x2\x63\x64\ag\x2\x2\x64\f\x3\x2\x2\x2\x65\x66\at\x2\x2\x66g\a\x63\x2"+
		"\x2gh\ap\x2\x2hi\ai\x2\x2ij\ag\x2\x2j\xE\x3\x2\x2\x2kl\ak\x2\x2lm\ap\x2"+
		"\x2m\x10\x3\x2\x2\x2no\av\x2\x2op\at\x2\x2pq\a\x63\x2\x2qr\ar\x2\x2r\x12"+
		"\x3\x2\x2\x2st\ar\x2\x2tu\an\x2\x2uv\a\x63\x2\x2vw\a{\x2\x2wx\ag\x2\x2"+
		"xy\at\x2\x2y\x14\x3\x2\x2\x2z{\ar\x2\x2{|\an\x2\x2|}\a\x63\x2\x2}~\a\x65"+
		"\x2\x2~\x7F\ag\x2\x2\x7F\x16\x3\x2\x2\x2\x80\x81\at\x2\x2\x81\x82\aq\x2"+
		"\x2\x82\x83\aw\x2\x2\x83\x84\ap\x2\x2\x84\x85\a\x66\x2\x2\x85\x18\x3\x2"+
		"\x2\x2\x86\x87\ao\x2\x2\x87\x88\ag\x2\x2\x88\x1A\x3\x2\x2\x2\x89\x8A\a"+
		"k\x2\x2\x8A\x8B\ah\x2\x2\x8B\x1C\x3\x2\x2\x2\x8C\x8D\av\x2\x2\x8D\x8E"+
		"\aq\x2\x2\x8E\x1E\x3\x2\x2\x2\x8F\x90\ay\x2\x2\x90\x91\aj\x2\x2\x91\x92"+
		"\ak\x2\x2\x92\x93\an\x2\x2\x93\x94\ag\x2\x2\x94 \x3\x2\x2\x2\x95\x96\a"+
		"J\x2\x2\x96\x97\aR\x2\x2\x97\"\x3\x2\x2\x2\x98\x99\a\x63\x2\x2\x99\x9A"+
		"\an\x2\x2\x9A\x9B\ak\x2\x2\x9B\x9C\ax\x2\x2\x9C\x9D\ag\x2\x2\x9D$\x3\x2"+
		"\x2\x2\x9E\x9F\ao\x2\x2\x9F\xA0\aq\x2\x2\xA0\xA1\ax\x2\x2\xA1\xA2\ag\x2"+
		"\x2\xA2&\x3\x2\x2\x2\xA3\xA4\au\x2\x2\xA4\xA5\aj\x2\x2\xA5\xA6\aq\x2\x2"+
		"\xA6\xA7\aq\x2\x2\xA7\xA8\av\x2\x2\xA8(\x3\x2\x2\x2\xA9\xAA\a?\x2\x2\xAA"+
		"*\x3\x2\x2\x2\xAB\xAC\a~\x2\x2\xAC\xB0\a~\x2\x2\xAD\xAE\a(\x2\x2\xAE\xB0"+
		"\a(\x2\x2\xAF\xAB\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2\xB0,\x3\x2\x2\x2\xB1"+
		"\xB7\t\x3\x2\x2\xB2\xB3\a?\x2\x2\xB3\xB7\a?\x2\x2\xB4\xB5\a#\x2\x2\xB5"+
		"\xB7\a?\x2\x2\xB6\xB1\x3\x2\x2\x2\xB6\xB2\x3\x2\x2\x2\xB6\xB4\x3\x2\x2"+
		"\x2\xB7.\x3\x2\x2\x2\xB8\xB9\t\x4\x2\x2\xB9\x30\x3\x2\x2\x2\xBA\xBB\a"+
		"*\x2\x2\xBB\x32\x3\x2\x2\x2\xBC\xBD\a+\x2\x2\xBD\x34\x3\x2\x2\x2\xBE\xBF"+
		"\a\x7F\x2\x2\xBF\x36\x3\x2\x2\x2\xC0\xC1\a}\x2\x2\xC1\x38\x3\x2\x2\x2"+
		"\xC2\xC3\a<\x2\x2\xC3:\x3\x2\x2\x2\xC4\xC5\a=\x2\x2\xC5<\x3\x2\x2\x2\xC6"+
		"\xC7\a.\x2\x2\xC7>\x3\x2\x2\x2\xC8\xC9\a\x30\x2\x2\xC9@\x3\x2\x2\x2\xCA"+
		"\xCC\t\x5\x2\x2\xCB\xCA\x3\x2\x2\x2\xCC\xCD\x3\x2\x2\x2\xCD\xCB\x3\x2"+
		"\x2\x2\xCD\xCE\x3\x2\x2\x2\xCE\x42\x3\x2\x2\x2\xCF\xD3\t\x6\x2\x2\xD0"+
		"\xD2\t\a\x2\x2\xD1\xD0\x3\x2\x2\x2\xD2\xD5\x3\x2\x2\x2\xD3\xD1\x3\x2\x2"+
		"\x2\xD3\xD4\x3\x2\x2\x2\xD4\x44\x3\x2\x2\x2\xD5\xD3\x3\x2\x2\x2\xD6\xD7"+
		"\t\b\x2\x2\xD7\xD8\x3\x2\x2\x2\xD8\xD9\b#\x2\x2\xD9\x46\x3\x2\x2\x2\a"+
		"\x2\xAF\xB6\xCD\xD3\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LabWork1github
