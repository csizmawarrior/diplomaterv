//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\Source\Repos\LabWork1github\LabWork1github\TrapGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="TrapGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ITrapGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] TrapGrammarParser.DefinitionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitName([NotNull] TrapGrammarParser.NameContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] TrapGrammarParser.StatementListContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] TrapGrammarParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameDeclaration([NotNull] TrapGrammarParser.NameDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.effectDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEffectDeclaration([NotNull] TrapGrammarParser.EffectDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.moveData"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMoveData([NotNull] TrapGrammarParser.MoveDataContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEffect([NotNull] TrapGrammarParser.EffectContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.damage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDamage([NotNull] TrapGrammarParser.DamageContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.heal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeal([NotNull] TrapGrammarParser.HealContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.monsterSpawn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMonsterSpawn([NotNull] TrapGrammarParser.MonsterSpawnContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.teleport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTeleport([NotNull] TrapGrammarParser.TeleportContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.rangeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRangeDeclaration([NotNull] TrapGrammarParser.RangeDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.moveRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMoveRoundDeclaration([NotNull] TrapGrammarParser.MoveRoundDeclarationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPlace([NotNull] TrapGrammarParser.PlaceContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.x"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitX([NotNull] TrapGrammarParser.XContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="TrapGrammarParser.y"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitY([NotNull] TrapGrammarParser.YContext context);
}
} // namespace LabWork1github
