//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\DynamicTrap.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DynamicTrapParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IDynamicTrapListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] DynamicTrapParser.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] DynamicTrapParser.DefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] DynamicTrapParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] DynamicTrapParser.NameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] DynamicTrapParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] DynamicTrapParser.StatementListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] DynamicTrapParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] DynamicTrapParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.damageDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDamageDeclaration([NotNull] DynamicTrapParser.DamageDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.damageDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDamageDeclaration([NotNull] DynamicTrapParser.DamageDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.healDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHealDeclaration([NotNull] DynamicTrapParser.HealDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.healDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHealDeclaration([NotNull] DynamicTrapParser.HealDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.spawnDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpawnDeclaration([NotNull] DynamicTrapParser.SpawnDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.spawnDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpawnDeclaration([NotNull] DynamicTrapParser.SpawnDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.teleport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeleport([NotNull] DynamicTrapParser.TeleportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.teleport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeleport([NotNull] DynamicTrapParser.TeleportContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.moveDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoveDeclaration([NotNull] DynamicTrapParser.MoveDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.moveDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoveDeclaration([NotNull] DynamicTrapParser.MoveDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameDeclaration([NotNull] DynamicTrapParser.NameDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameDeclaration([NotNull] DynamicTrapParser.NameDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.damageDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDamageDeclare([NotNull] DynamicTrapParser.DamageDeclareContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.damageDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDamageDeclare([NotNull] DynamicTrapParser.DamageDeclareContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.healDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHealDeclare([NotNull] DynamicTrapParser.HealDeclareContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.healDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHealDeclare([NotNull] DynamicTrapParser.HealDeclareContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.distanceDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDistanceDeclare([NotNull] DynamicTrapParser.DistanceDeclareContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.distanceDeclare"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDistanceDeclare([NotNull] DynamicTrapParser.DistanceDeclareContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.ifexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfexpression([NotNull] DynamicTrapParser.IfexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.ifexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfexpression([NotNull] DynamicTrapParser.IfexpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.whileexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileexpression([NotNull] DynamicTrapParser.WhileexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.whileexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileexpression([NotNull] DynamicTrapParser.WhileexpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] DynamicTrapParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] DynamicTrapParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.firstnumparam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFirstnumparam([NotNull] DynamicTrapParser.FirstnumparamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.firstnumparam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFirstnumparam([NotNull] DynamicTrapParser.FirstnumparamContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.secondnumparam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondnumparam([NotNull] DynamicTrapParser.SecondnumparamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.secondnumparam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondnumparam([NotNull] DynamicTrapParser.SecondnumparamContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.numberoperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberoperations([NotNull] DynamicTrapParser.NumberoperationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.numberoperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberoperations([NotNull] DynamicTrapParser.NumberoperationsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacter([NotNull] DynamicTrapParser.CharacterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.character"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacter([NotNull] DynamicTrapParser.CharacterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.booloperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooloperation([NotNull] DynamicTrapParser.BooloperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.booloperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooloperation([NotNull] DynamicTrapParser.BooloperationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.secondbooloperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSecondbooloperation([NotNull] DynamicTrapParser.SecondbooloperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.secondbooloperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSecondbooloperation([NotNull] DynamicTrapParser.SecondbooloperationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.boolsconnected"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolsconnected([NotNull] DynamicTrapParser.BoolsconnectedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.boolsconnected"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolsconnected([NotNull] DynamicTrapParser.BoolsconnectedContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.boolexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolexpression([NotNull] DynamicTrapParser.BoolexpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.boolexpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolexpression([NotNull] DynamicTrapParser.BoolexpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.possibleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPossibleAttributes([NotNull] DynamicTrapParser.PossibleAttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.possibleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPossibleAttributes([NotNull] DynamicTrapParser.PossibleAttributesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.characterAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacterAttribute([NotNull] DynamicTrapParser.CharacterAttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.characterAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacterAttribute([NotNull] DynamicTrapParser.CharacterAttributeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.numholder"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumholder([NotNull] DynamicTrapParser.NumholderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.numholder"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumholder([NotNull] DynamicTrapParser.NumholderContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlace([NotNull] DynamicTrapParser.PlaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlace([NotNull] DynamicTrapParser.PlaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.x"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterX([NotNull] DynamicTrapParser.XContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.x"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitX([NotNull] DynamicTrapParser.XContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="DynamicTrapParser.y"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterY([NotNull] DynamicTrapParser.YContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DynamicTrapParser.y"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitY([NotNull] DynamicTrapParser.YContext context);
}
} // namespace LabWork1github
