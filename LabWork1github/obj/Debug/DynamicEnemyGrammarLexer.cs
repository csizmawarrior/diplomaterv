//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\g4 files\DynamicEnemyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DynamicEnemyGrammarLexer : Lexer {
	public const int
		TELEPORT_PLACE=1, SPAWN_PLACE=2, SPAWN_TYPE=3, RANDOM=4, DISTANCE=5, DAMAGE=6, 
		DIRECTION=7, NAME_T=8, TRAP=9, MONSTER=10, PLAYER=11, PLACE_T=12, ROUND=13, 
		NEAR=14, IS=15, ME=16, IF=17, TO=18, WHILE=19, HEALTH=20, ALIVE=21, MOVE=22, 
		ON=23, SHOOT=24, SPAWN=25, TELEPORT_T=26, PARTNER=27, HEAL=28, WHEN=29, 
		EQUALS=30, ABSOLUTE=31, NEGATE=32, BOOLCONNECTER=33, COMPARE=34, NUMCOMPARE=35, 
		NUMCONNECTERMULTIP=36, NUMCONNECTERADD=37, PARENTHESISSTART=38, PARENTHESISCLOSE=39, 
		BRACKETCLOSE=40, BRACKETSTART=41, COLON=42, SEMI=43, COMMA=44, NUMBER=45, 
		DOT=46, ID=47, WS=48;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "RANDOM", "DISTANCE", "DAMAGE", 
		"DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", "PLACE_T", "ROUND", 
		"NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", "ALIVE", "MOVE", "ON", 
		"SHOOT", "SPAWN", "TELEPORT_T", "PARTNER", "HEAL", "WHEN", "EQUALS", "ABSOLUTE", 
		"NEGATE", "BOOLCONNECTER", "COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", 
		"NUMCONNECTERADD", "PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", 
		"BRACKETSTART", "COLON", "SEMI", "COMMA", "NUMBER", "DOT", "ID", "WS"
	};


	public DynamicEnemyGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'teleport_place'", "'spawn_place'", "'spawn_type'", "'random'", 
		"'distance'", "'damage'", null, "'name'", "'trap'", "'monster'", "'player'", 
		"'place'", "'round'", "'near'", "'is'", "'me'", "'if'", "'to'", "'while'", 
		"'health'", "'alive'", "'move'", "'on'", "'shoot'", "'spawn'", "'teleport'", 
		"'partner'", "'heal'", "'when'", "'='", "'|'", "'!'", null, null, null, 
		null, null, "'('", "')'", "'}'", "'{'", "':'", "';'", "','", null, "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "RANDOM", "DISTANCE", 
		"DAMAGE", "DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", "PLACE_T", 
		"ROUND", "NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", "ALIVE", "MOVE", 
		"ON", "SHOOT", "SPAWN", "TELEPORT_T", "PARTNER", "HEAL", "WHEN", "EQUALS", 
		"ABSOLUTE", "NEGATE", "BOOLCONNECTER", "COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", 
		"NUMCONNECTERADD", "PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", 
		"BRACKETSTART", "COLON", "SEMI", "COMMA", "NUMBER", "DOT", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DynamicEnemyGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x32\x15A\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3"+
		"\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3"+
		"\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3"+
		"\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3"+
		"\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3"+
		"\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3\"\x3\"\x5"+
		"\"\x125\n\"\x3#\x3#\x3#\x3#\x5#\x12B\n#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3"+
		"\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x6.\x142\n.\r."+
		"\xE.\x143\x3.\x3.\x6.\x148\n.\r.\xE.\x149\x5.\x14C\n.\x3/\x3/\x3\x30\x3"+
		"\x30\a\x30\x152\n\x30\f\x30\xE\x30\x155\v\x30\x3\x31\x3\x31\x3\x31\x3"+
		"\x31\x2\x2\x2\x32\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x61\x2\x32\x3\x2\n\x6\x2\x44\x44"+
		"HHNNTT\x4\x2>>@@\x5\x2\'\',,\x31\x31\x4\x2--//\x3\x2\x32;\x4\x2\x43\\"+
		"\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x15F\x2\x3\x3"+
		"\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3"+
		"\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13"+
		"\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2"+
		"\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2"+
		"\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2"+
		"+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33"+
		"\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2"+
		"\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2"+
		"\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2"+
		"K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2"+
		"\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2"+
		"\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x3\x63\x3\x2\x2\x2"+
		"\x5r\x3\x2\x2\x2\a~\x3\x2\x2\x2\t\x89\x3\x2\x2\x2\v\x90\x3\x2\x2\x2\r"+
		"\x99\x3\x2\x2\x2\xF\xA0\x3\x2\x2\x2\x11\xA2\x3\x2\x2\x2\x13\xA7\x3\x2"+
		"\x2\x2\x15\xAC\x3\x2\x2\x2\x17\xB4\x3\x2\x2\x2\x19\xBB\x3\x2\x2\x2\x1B"+
		"\xC1\x3\x2\x2\x2\x1D\xC7\x3\x2\x2\x2\x1F\xCC\x3\x2\x2\x2!\xCF\x3\x2\x2"+
		"\x2#\xD2\x3\x2\x2\x2%\xD5\x3\x2\x2\x2\'\xD8\x3\x2\x2\x2)\xDE\x3\x2\x2"+
		"\x2+\xE5\x3\x2\x2\x2-\xEB\x3\x2\x2\x2/\xF0\x3\x2\x2\x2\x31\xF3\x3\x2\x2"+
		"\x2\x33\xF9\x3\x2\x2\x2\x35\xFF\x3\x2\x2\x2\x37\x108\x3\x2\x2\x2\x39\x110"+
		"\x3\x2\x2\x2;\x115\x3\x2\x2\x2=\x11A\x3\x2\x2\x2?\x11C\x3\x2\x2\x2\x41"+
		"\x11E\x3\x2\x2\x2\x43\x124\x3\x2\x2\x2\x45\x12A\x3\x2\x2\x2G\x12C\x3\x2"+
		"\x2\x2I\x12E\x3\x2\x2\x2K\x130\x3\x2\x2\x2M\x132\x3\x2\x2\x2O\x134\x3"+
		"\x2\x2\x2Q\x136\x3\x2\x2\x2S\x138\x3\x2\x2\x2U\x13A\x3\x2\x2\x2W\x13C"+
		"\x3\x2\x2\x2Y\x13E\x3\x2\x2\x2[\x141\x3\x2\x2\x2]\x14D\x3\x2\x2\x2_\x14F"+
		"\x3\x2\x2\x2\x61\x156\x3\x2\x2\x2\x63\x64\av\x2\x2\x64\x65\ag\x2\x2\x65"+
		"\x66\an\x2\x2\x66g\ag\x2\x2gh\ar\x2\x2hi\aq\x2\x2ij\at\x2\x2jk\av\x2\x2"+
		"kl\a\x61\x2\x2lm\ar\x2\x2mn\an\x2\x2no\a\x63\x2\x2op\a\x65\x2\x2pq\ag"+
		"\x2\x2q\x4\x3\x2\x2\x2rs\au\x2\x2st\ar\x2\x2tu\a\x63\x2\x2uv\ay\x2\x2"+
		"vw\ap\x2\x2wx\a\x61\x2\x2xy\ar\x2\x2yz\an\x2\x2z{\a\x63\x2\x2{|\a\x65"+
		"\x2\x2|}\ag\x2\x2}\x6\x3\x2\x2\x2~\x7F\au\x2\x2\x7F\x80\ar\x2\x2\x80\x81"+
		"\a\x63\x2\x2\x81\x82\ay\x2\x2\x82\x83\ap\x2\x2\x83\x84\a\x61\x2\x2\x84"+
		"\x85\av\x2\x2\x85\x86\a{\x2\x2\x86\x87\ar\x2\x2\x87\x88\ag\x2\x2\x88\b"+
		"\x3\x2\x2\x2\x89\x8A\at\x2\x2\x8A\x8B\a\x63\x2\x2\x8B\x8C\ap\x2\x2\x8C"+
		"\x8D\a\x66\x2\x2\x8D\x8E\aq\x2\x2\x8E\x8F\ao\x2\x2\x8F\n\x3\x2\x2\x2\x90"+
		"\x91\a\x66\x2\x2\x91\x92\ak\x2\x2\x92\x93\au\x2\x2\x93\x94\av\x2\x2\x94"+
		"\x95\a\x63\x2\x2\x95\x96\ap\x2\x2\x96\x97\a\x65\x2\x2\x97\x98\ag\x2\x2"+
		"\x98\f\x3\x2\x2\x2\x99\x9A\a\x66\x2\x2\x9A\x9B\a\x63\x2\x2\x9B\x9C\ao"+
		"\x2\x2\x9C\x9D\a\x63\x2\x2\x9D\x9E\ai\x2\x2\x9E\x9F\ag\x2\x2\x9F\xE\x3"+
		"\x2\x2\x2\xA0\xA1\t\x2\x2\x2\xA1\x10\x3\x2\x2\x2\xA2\xA3\ap\x2\x2\xA3"+
		"\xA4\a\x63\x2\x2\xA4\xA5\ao\x2\x2\xA5\xA6\ag\x2\x2\xA6\x12\x3\x2\x2\x2"+
		"\xA7\xA8\av\x2\x2\xA8\xA9\at\x2\x2\xA9\xAA\a\x63\x2\x2\xAA\xAB\ar\x2\x2"+
		"\xAB\x14\x3\x2\x2\x2\xAC\xAD\ao\x2\x2\xAD\xAE\aq\x2\x2\xAE\xAF\ap\x2\x2"+
		"\xAF\xB0\au\x2\x2\xB0\xB1\av\x2\x2\xB1\xB2\ag\x2\x2\xB2\xB3\at\x2\x2\xB3"+
		"\x16\x3\x2\x2\x2\xB4\xB5\ar\x2\x2\xB5\xB6\an\x2\x2\xB6\xB7\a\x63\x2\x2"+
		"\xB7\xB8\a{\x2\x2\xB8\xB9\ag\x2\x2\xB9\xBA\at\x2\x2\xBA\x18\x3\x2\x2\x2"+
		"\xBB\xBC\ar\x2\x2\xBC\xBD\an\x2\x2\xBD\xBE\a\x63\x2\x2\xBE\xBF\a\x65\x2"+
		"\x2\xBF\xC0\ag\x2\x2\xC0\x1A\x3\x2\x2\x2\xC1\xC2\at\x2\x2\xC2\xC3\aq\x2"+
		"\x2\xC3\xC4\aw\x2\x2\xC4\xC5\ap\x2\x2\xC5\xC6\a\x66\x2\x2\xC6\x1C\x3\x2"+
		"\x2\x2\xC7\xC8\ap\x2\x2\xC8\xC9\ag\x2\x2\xC9\xCA\a\x63\x2\x2\xCA\xCB\a"+
		"t\x2\x2\xCB\x1E\x3\x2\x2\x2\xCC\xCD\ak\x2\x2\xCD\xCE\au\x2\x2\xCE \x3"+
		"\x2\x2\x2\xCF\xD0\ao\x2\x2\xD0\xD1\ag\x2\x2\xD1\"\x3\x2\x2\x2\xD2\xD3"+
		"\ak\x2\x2\xD3\xD4\ah\x2\x2\xD4$\x3\x2\x2\x2\xD5\xD6\av\x2\x2\xD6\xD7\a"+
		"q\x2\x2\xD7&\x3\x2\x2\x2\xD8\xD9\ay\x2\x2\xD9\xDA\aj\x2\x2\xDA\xDB\ak"+
		"\x2\x2\xDB\xDC\an\x2\x2\xDC\xDD\ag\x2\x2\xDD(\x3\x2\x2\x2\xDE\xDF\aj\x2"+
		"\x2\xDF\xE0\ag\x2\x2\xE0\xE1\a\x63\x2\x2\xE1\xE2\an\x2\x2\xE2\xE3\av\x2"+
		"\x2\xE3\xE4\aj\x2\x2\xE4*\x3\x2\x2\x2\xE5\xE6\a\x63\x2\x2\xE6\xE7\an\x2"+
		"\x2\xE7\xE8\ak\x2\x2\xE8\xE9\ax\x2\x2\xE9\xEA\ag\x2\x2\xEA,\x3\x2\x2\x2"+
		"\xEB\xEC\ao\x2\x2\xEC\xED\aq\x2\x2\xED\xEE\ax\x2\x2\xEE\xEF\ag\x2\x2\xEF"+
		".\x3\x2\x2\x2\xF0\xF1\aq\x2\x2\xF1\xF2\ap\x2\x2\xF2\x30\x3\x2\x2\x2\xF3"+
		"\xF4\au\x2\x2\xF4\xF5\aj\x2\x2\xF5\xF6\aq\x2\x2\xF6\xF7\aq\x2\x2\xF7\xF8"+
		"\av\x2\x2\xF8\x32\x3\x2\x2\x2\xF9\xFA\au\x2\x2\xFA\xFB\ar\x2\x2\xFB\xFC"+
		"\a\x63\x2\x2\xFC\xFD\ay\x2\x2\xFD\xFE\ap\x2\x2\xFE\x34\x3\x2\x2\x2\xFF"+
		"\x100\av\x2\x2\x100\x101\ag\x2\x2\x101\x102\an\x2\x2\x102\x103\ag\x2\x2"+
		"\x103\x104\ar\x2\x2\x104\x105\aq\x2\x2\x105\x106\at\x2\x2\x106\x107\a"+
		"v\x2\x2\x107\x36\x3\x2\x2\x2\x108\x109\ar\x2\x2\x109\x10A\a\x63\x2\x2"+
		"\x10A\x10B\at\x2\x2\x10B\x10C\av\x2\x2\x10C\x10D\ap\x2\x2\x10D\x10E\a"+
		"g\x2\x2\x10E\x10F\at\x2\x2\x10F\x38\x3\x2\x2\x2\x110\x111\aj\x2\x2\x111"+
		"\x112\ag\x2\x2\x112\x113\a\x63\x2\x2\x113\x114\an\x2\x2\x114:\x3\x2\x2"+
		"\x2\x115\x116\ay\x2\x2\x116\x117\aj\x2\x2\x117\x118\ag\x2\x2\x118\x119"+
		"\ap\x2\x2\x119<\x3\x2\x2\x2\x11A\x11B\a?\x2\x2\x11B>\x3\x2\x2\x2\x11C"+
		"\x11D\a~\x2\x2\x11D@\x3\x2\x2\x2\x11E\x11F\a#\x2\x2\x11F\x42\x3\x2\x2"+
		"\x2\x120\x121\a~\x2\x2\x121\x125\a~\x2\x2\x122\x123\a(\x2\x2\x123\x125"+
		"\a(\x2\x2\x124\x120\x3\x2\x2\x2\x124\x122\x3\x2\x2\x2\x125\x44\x3\x2\x2"+
		"\x2\x126\x127\a?\x2\x2\x127\x12B\a?\x2\x2\x128\x129\a#\x2\x2\x129\x12B"+
		"\a?\x2\x2\x12A\x126\x3\x2\x2\x2\x12A\x128\x3\x2\x2\x2\x12B\x46\x3\x2\x2"+
		"\x2\x12C\x12D\t\x3\x2\x2\x12DH\x3\x2\x2\x2\x12E\x12F\t\x4\x2\x2\x12FJ"+
		"\x3\x2\x2\x2\x130\x131\t\x5\x2\x2\x131L\x3\x2\x2\x2\x132\x133\a*\x2\x2"+
		"\x133N\x3\x2\x2\x2\x134\x135\a+\x2\x2\x135P\x3\x2\x2\x2\x136\x137\a\x7F"+
		"\x2\x2\x137R\x3\x2\x2\x2\x138\x139\a}\x2\x2\x139T\x3\x2\x2\x2\x13A\x13B"+
		"\a<\x2\x2\x13BV\x3\x2\x2\x2\x13C\x13D\a=\x2\x2\x13DX\x3\x2\x2\x2\x13E"+
		"\x13F\a.\x2\x2\x13FZ\x3\x2\x2\x2\x140\x142\t\x6\x2\x2\x141\x140\x3\x2"+
		"\x2\x2\x142\x143\x3\x2\x2\x2\x143\x141\x3\x2\x2\x2\x143\x144\x3\x2\x2"+
		"\x2\x144\x14B\x3\x2\x2\x2\x145\x147\x5]/\x2\x146\x148\t\x6\x2\x2\x147"+
		"\x146\x3\x2\x2\x2\x148\x149\x3\x2\x2\x2\x149\x147\x3\x2\x2\x2\x149\x14A"+
		"\x3\x2\x2\x2\x14A\x14C\x3\x2\x2\x2\x14B\x145\x3\x2\x2\x2\x14B\x14C\x3"+
		"\x2\x2\x2\x14C\\\x3\x2\x2\x2\x14D\x14E\a\x30\x2\x2\x14E^\x3\x2\x2\x2\x14F"+
		"\x153\t\a\x2\x2\x150\x152\t\b\x2\x2\x151\x150\x3\x2\x2\x2\x152\x155\x3"+
		"\x2\x2\x2\x153\x151\x3\x2\x2\x2\x153\x154\x3\x2\x2\x2\x154`\x3\x2\x2\x2"+
		"\x155\x153\x3\x2\x2\x2\x156\x157\t\t\x2\x2\x157\x158\x3\x2\x2\x2\x158"+
		"\x159\b\x31\x2\x2\x159\x62\x3\x2\x2\x2\t\x2\x124\x12A\x143\x149\x14B\x153"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LabWork1github
