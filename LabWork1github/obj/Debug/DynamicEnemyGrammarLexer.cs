//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\g4 files\DynamicEnemyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DynamicEnemyGrammarLexer : Lexer {
	public const int
		TELEPORT_PLACE=1, SPAWN_PLACE=2, SPAWN_TYPE=3, NOTHING=4, RANDOM=5, DISTANCE=6, 
		DAMAGE=7, DIRECTION=8, NAME_T=9, TRAP=10, MONSTER=11, PLAYER=12, PLACE_T=13, 
		ROUND=14, NEAR=15, IS=16, ME=17, IF=18, TO=19, WHILE=20, HEALTH=21, ALIVE=22, 
		MOVE=23, ON=24, SHOOT=25, SPAWN=26, TELEPORT_T=27, HEAL=28, EQUALS=29, 
		ABSOLUTE=30, NEGATE=31, BOOLCONNECTER=32, COMPARE=33, NUMCOMPARE=34, NUMCONNECTERMULTIP=35, 
		NUMCONNECTERADD=36, PARENTHESISSTART=37, PARENTHESISCLOSE=38, BRACKETCLOSE=39, 
		BRACKETSTART=40, COLON=41, SEMI=42, COMMA=43, NUMBER=44, DOT=45, ID=46, 
		WS=47;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "NOTHING", "RANDOM", "DISTANCE", 
		"DAMAGE", "DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", "PLACE_T", 
		"ROUND", "NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", "ALIVE", "MOVE", 
		"ON", "SHOOT", "SPAWN", "TELEPORT_T", "HEAL", "EQUALS", "ABSOLUTE", "NEGATE", 
		"BOOLCONNECTER", "COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", "NUMCONNECTERADD", 
		"PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", "BRACKETSTART", 
		"COLON", "SEMI", "COMMA", "NUMBER", "DOT", "ID", "WS"
	};


	public DynamicEnemyGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'teleport_place'", "'spawn_place'", "'spawn_type'", "'nothing'", 
		"'random'", "'distance'", "'damage'", null, "'name'", "'trap'", "'monster'", 
		"'player'", "'place'", "'round'", "'near'", "'is'", "'me'", "'if'", "'to'", 
		"'while'", "'health'", "'alive'", "'move'", "'on'", "'shoot'", "'spawn'", 
		"'teleport'", "'heal'", "'='", "'|'", "'!'", null, null, null, null, null, 
		"'('", "')'", "'}'", "'{'", "':'", "';'", "','", null, "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "NOTHING", "RANDOM", 
		"DISTANCE", "DAMAGE", "DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", 
		"PLACE_T", "ROUND", "NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", 
		"ALIVE", "MOVE", "ON", "SHOOT", "SPAWN", "TELEPORT_T", "HEAL", "EQUALS", 
		"ABSOLUTE", "NEGATE", "BOOLCONNECTER", "COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", 
		"NUMCONNECTERADD", "PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", 
		"BRACKETSTART", "COLON", "SEMI", "COMMA", "NUMBER", "DOT", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DynamicEnemyGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x31\x153\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3"+
		"\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3"+
		"\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3"+
		"\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3"+
		"\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3"+
		"\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3"+
		"\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3"+
		"!\x3!\x3!\x3!\x5!\x11E\n!\x3\"\x3\"\x3\"\x3\"\x5\"\x124\n\"\x3#\x3#\x3"+
		"$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3"+
		",\x3-\x6-\x13B\n-\r-\xE-\x13C\x3-\x3-\x6-\x141\n-\r-\xE-\x142\x5-\x145"+
		"\n-\x3.\x3.\x3/\x3/\a/\x14B\n/\f/\xE/\x14E\v/\x3\x30\x3\x30\x3\x30\x3"+
		"\x30\x2\x2\x2\x31\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2"+
		"\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x3\x2\n\x6\x2\x44\x44HHNNTT\x4\x2"+
		">>@@\x5\x2\'\',,\x31\x31\x4\x2--//\x3\x2\x32;\x4\x2\x43\\\x63|\x6\x2\x32"+
		";\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x158\x2\x3\x3\x2\x2\x2\x2\x5"+
		"\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3"+
		"\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2"+
		"\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2"+
		"M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2"+
		"\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2"+
		"\x2_\x3\x2\x2\x2\x3\x61\x3\x2\x2\x2\x5p\x3\x2\x2\x2\a|\x3\x2\x2\x2\t\x87"+
		"\x3\x2\x2\x2\v\x8F\x3\x2\x2\x2\r\x96\x3\x2\x2\x2\xF\x9F\x3\x2\x2\x2\x11"+
		"\xA6\x3\x2\x2\x2\x13\xA8\x3\x2\x2\x2\x15\xAD\x3\x2\x2\x2\x17\xB2\x3\x2"+
		"\x2\x2\x19\xBA\x3\x2\x2\x2\x1B\xC1\x3\x2\x2\x2\x1D\xC7\x3\x2\x2\x2\x1F"+
		"\xCD\x3\x2\x2\x2!\xD2\x3\x2\x2\x2#\xD5\x3\x2\x2\x2%\xD8\x3\x2\x2\x2\'"+
		"\xDB\x3\x2\x2\x2)\xDE\x3\x2\x2\x2+\xE4\x3\x2\x2\x2-\xEB\x3\x2\x2\x2/\xF1"+
		"\x3\x2\x2\x2\x31\xF6\x3\x2\x2\x2\x33\xF9\x3\x2\x2\x2\x35\xFF\x3\x2\x2"+
		"\x2\x37\x105\x3\x2\x2\x2\x39\x10E\x3\x2\x2\x2;\x113\x3\x2\x2\x2=\x115"+
		"\x3\x2\x2\x2?\x117\x3\x2\x2\x2\x41\x11D\x3\x2\x2\x2\x43\x123\x3\x2\x2"+
		"\x2\x45\x125\x3\x2\x2\x2G\x127\x3\x2\x2\x2I\x129\x3\x2\x2\x2K\x12B\x3"+
		"\x2\x2\x2M\x12D\x3\x2\x2\x2O\x12F\x3\x2\x2\x2Q\x131\x3\x2\x2\x2S\x133"+
		"\x3\x2\x2\x2U\x135\x3\x2\x2\x2W\x137\x3\x2\x2\x2Y\x13A\x3\x2\x2\x2[\x146"+
		"\x3\x2\x2\x2]\x148\x3\x2\x2\x2_\x14F\x3\x2\x2\x2\x61\x62\av\x2\x2\x62"+
		"\x63\ag\x2\x2\x63\x64\an\x2\x2\x64\x65\ag\x2\x2\x65\x66\ar\x2\x2\x66g"+
		"\aq\x2\x2gh\at\x2\x2hi\av\x2\x2ij\a\x61\x2\x2jk\ar\x2\x2kl\an\x2\x2lm"+
		"\a\x63\x2\x2mn\a\x65\x2\x2no\ag\x2\x2o\x4\x3\x2\x2\x2pq\au\x2\x2qr\ar"+
		"\x2\x2rs\a\x63\x2\x2st\ay\x2\x2tu\ap\x2\x2uv\a\x61\x2\x2vw\ar\x2\x2wx"+
		"\an\x2\x2xy\a\x63\x2\x2yz\a\x65\x2\x2z{\ag\x2\x2{\x6\x3\x2\x2\x2|}\au"+
		"\x2\x2}~\ar\x2\x2~\x7F\a\x63\x2\x2\x7F\x80\ay\x2\x2\x80\x81\ap\x2\x2\x81"+
		"\x82\a\x61\x2\x2\x82\x83\av\x2\x2\x83\x84\a{\x2\x2\x84\x85\ar\x2\x2\x85"+
		"\x86\ag\x2\x2\x86\b\x3\x2\x2\x2\x87\x88\ap\x2\x2\x88\x89\aq\x2\x2\x89"+
		"\x8A\av\x2\x2\x8A\x8B\aj\x2\x2\x8B\x8C\ak\x2\x2\x8C\x8D\ap\x2\x2\x8D\x8E"+
		"\ai\x2\x2\x8E\n\x3\x2\x2\x2\x8F\x90\at\x2\x2\x90\x91\a\x63\x2\x2\x91\x92"+
		"\ap\x2\x2\x92\x93\a\x66\x2\x2\x93\x94\aq\x2\x2\x94\x95\ao\x2\x2\x95\f"+
		"\x3\x2\x2\x2\x96\x97\a\x66\x2\x2\x97\x98\ak\x2\x2\x98\x99\au\x2\x2\x99"+
		"\x9A\av\x2\x2\x9A\x9B\a\x63\x2\x2\x9B\x9C\ap\x2\x2\x9C\x9D\a\x65\x2\x2"+
		"\x9D\x9E\ag\x2\x2\x9E\xE\x3\x2\x2\x2\x9F\xA0\a\x66\x2\x2\xA0\xA1\a\x63"+
		"\x2\x2\xA1\xA2\ao\x2\x2\xA2\xA3\a\x63\x2\x2\xA3\xA4\ai\x2\x2\xA4\xA5\a"+
		"g\x2\x2\xA5\x10\x3\x2\x2\x2\xA6\xA7\t\x2\x2\x2\xA7\x12\x3\x2\x2\x2\xA8"+
		"\xA9\ap\x2\x2\xA9\xAA\a\x63\x2\x2\xAA\xAB\ao\x2\x2\xAB\xAC\ag\x2\x2\xAC"+
		"\x14\x3\x2\x2\x2\xAD\xAE\av\x2\x2\xAE\xAF\at\x2\x2\xAF\xB0\a\x63\x2\x2"+
		"\xB0\xB1\ar\x2\x2\xB1\x16\x3\x2\x2\x2\xB2\xB3\ao\x2\x2\xB3\xB4\aq\x2\x2"+
		"\xB4\xB5\ap\x2\x2\xB5\xB6\au\x2\x2\xB6\xB7\av\x2\x2\xB7\xB8\ag\x2\x2\xB8"+
		"\xB9\at\x2\x2\xB9\x18\x3\x2\x2\x2\xBA\xBB\ar\x2\x2\xBB\xBC\an\x2\x2\xBC"+
		"\xBD\a\x63\x2\x2\xBD\xBE\a{\x2\x2\xBE\xBF\ag\x2\x2\xBF\xC0\at\x2\x2\xC0"+
		"\x1A\x3\x2\x2\x2\xC1\xC2\ar\x2\x2\xC2\xC3\an\x2\x2\xC3\xC4\a\x63\x2\x2"+
		"\xC4\xC5\a\x65\x2\x2\xC5\xC6\ag\x2\x2\xC6\x1C\x3\x2\x2\x2\xC7\xC8\at\x2"+
		"\x2\xC8\xC9\aq\x2\x2\xC9\xCA\aw\x2\x2\xCA\xCB\ap\x2\x2\xCB\xCC\a\x66\x2"+
		"\x2\xCC\x1E\x3\x2\x2\x2\xCD\xCE\ap\x2\x2\xCE\xCF\ag\x2\x2\xCF\xD0\a\x63"+
		"\x2\x2\xD0\xD1\at\x2\x2\xD1 \x3\x2\x2\x2\xD2\xD3\ak\x2\x2\xD3\xD4\au\x2"+
		"\x2\xD4\"\x3\x2\x2\x2\xD5\xD6\ao\x2\x2\xD6\xD7\ag\x2\x2\xD7$\x3\x2\x2"+
		"\x2\xD8\xD9\ak\x2\x2\xD9\xDA\ah\x2\x2\xDA&\x3\x2\x2\x2\xDB\xDC\av\x2\x2"+
		"\xDC\xDD\aq\x2\x2\xDD(\x3\x2\x2\x2\xDE\xDF\ay\x2\x2\xDF\xE0\aj\x2\x2\xE0"+
		"\xE1\ak\x2\x2\xE1\xE2\an\x2\x2\xE2\xE3\ag\x2\x2\xE3*\x3\x2\x2\x2\xE4\xE5"+
		"\aj\x2\x2\xE5\xE6\ag\x2\x2\xE6\xE7\a\x63\x2\x2\xE7\xE8\an\x2\x2\xE8\xE9"+
		"\av\x2\x2\xE9\xEA\aj\x2\x2\xEA,\x3\x2\x2\x2\xEB\xEC\a\x63\x2\x2\xEC\xED"+
		"\an\x2\x2\xED\xEE\ak\x2\x2\xEE\xEF\ax\x2\x2\xEF\xF0\ag\x2\x2\xF0.\x3\x2"+
		"\x2\x2\xF1\xF2\ao\x2\x2\xF2\xF3\aq\x2\x2\xF3\xF4\ax\x2\x2\xF4\xF5\ag\x2"+
		"\x2\xF5\x30\x3\x2\x2\x2\xF6\xF7\aq\x2\x2\xF7\xF8\ap\x2\x2\xF8\x32\x3\x2"+
		"\x2\x2\xF9\xFA\au\x2\x2\xFA\xFB\aj\x2\x2\xFB\xFC\aq\x2\x2\xFC\xFD\aq\x2"+
		"\x2\xFD\xFE\av\x2\x2\xFE\x34\x3\x2\x2\x2\xFF\x100\au\x2\x2\x100\x101\a"+
		"r\x2\x2\x101\x102\a\x63\x2\x2\x102\x103\ay\x2\x2\x103\x104\ap\x2\x2\x104"+
		"\x36\x3\x2\x2\x2\x105\x106\av\x2\x2\x106\x107\ag\x2\x2\x107\x108\an\x2"+
		"\x2\x108\x109\ag\x2\x2\x109\x10A\ar\x2\x2\x10A\x10B\aq\x2\x2\x10B\x10C"+
		"\at\x2\x2\x10C\x10D\av\x2\x2\x10D\x38\x3\x2\x2\x2\x10E\x10F\aj\x2\x2\x10F"+
		"\x110\ag\x2\x2\x110\x111\a\x63\x2\x2\x111\x112\an\x2\x2\x112:\x3\x2\x2"+
		"\x2\x113\x114\a?\x2\x2\x114<\x3\x2\x2\x2\x115\x116\a~\x2\x2\x116>\x3\x2"+
		"\x2\x2\x117\x118\a#\x2\x2\x118@\x3\x2\x2\x2\x119\x11A\a~\x2\x2\x11A\x11E"+
		"\a~\x2\x2\x11B\x11C\a(\x2\x2\x11C\x11E\a(\x2\x2\x11D\x119\x3\x2\x2\x2"+
		"\x11D\x11B\x3\x2\x2\x2\x11E\x42\x3\x2\x2\x2\x11F\x120\a?\x2\x2\x120\x124"+
		"\a?\x2\x2\x121\x122\a#\x2\x2\x122\x124\a?\x2\x2\x123\x11F\x3\x2\x2\x2"+
		"\x123\x121\x3\x2\x2\x2\x124\x44\x3\x2\x2\x2\x125\x126\t\x3\x2\x2\x126"+
		"\x46\x3\x2\x2\x2\x127\x128\t\x4\x2\x2\x128H\x3\x2\x2\x2\x129\x12A\t\x5"+
		"\x2\x2\x12AJ\x3\x2\x2\x2\x12B\x12C\a*\x2\x2\x12CL\x3\x2\x2\x2\x12D\x12E"+
		"\a+\x2\x2\x12EN\x3\x2\x2\x2\x12F\x130\a\x7F\x2\x2\x130P\x3\x2\x2\x2\x131"+
		"\x132\a}\x2\x2\x132R\x3\x2\x2\x2\x133\x134\a<\x2\x2\x134T\x3\x2\x2\x2"+
		"\x135\x136\a=\x2\x2\x136V\x3\x2\x2\x2\x137\x138\a.\x2\x2\x138X\x3\x2\x2"+
		"\x2\x139\x13B\t\x6\x2\x2\x13A\x139\x3\x2\x2\x2\x13B\x13C\x3\x2\x2\x2\x13C"+
		"\x13A\x3\x2\x2\x2\x13C\x13D\x3\x2\x2\x2\x13D\x144\x3\x2\x2\x2\x13E\x140"+
		"\x5[.\x2\x13F\x141\t\x6\x2\x2\x140\x13F\x3\x2\x2\x2\x141\x142\x3\x2\x2"+
		"\x2\x142\x140\x3\x2\x2\x2\x142\x143\x3\x2\x2\x2\x143\x145\x3\x2\x2\x2"+
		"\x144\x13E\x3\x2\x2\x2\x144\x145\x3\x2\x2\x2\x145Z\x3\x2\x2\x2\x146\x147"+
		"\a\x30\x2\x2\x147\\\x3\x2\x2\x2\x148\x14C\t\a\x2\x2\x149\x14B\t\b\x2\x2"+
		"\x14A\x149\x3\x2\x2\x2\x14B\x14E\x3\x2\x2\x2\x14C\x14A\x3\x2\x2\x2\x14C"+
		"\x14D\x3\x2\x2\x2\x14D^\x3\x2\x2\x2\x14E\x14C\x3\x2\x2\x2\x14F\x150\t"+
		"\t\x2\x2\x150\x151\x3\x2\x2\x2\x151\x152\b\x30\x2\x2\x152`\x3\x2\x2\x2"+
		"\t\x2\x11D\x123\x13C\x142\x144\x14C\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LabWork1github
