//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\g4 files\DynamicEnemyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DynamicEnemyGrammarLexer : Lexer {
	public const int
		TELEPORT_PLACE=1, SPAWN_PLACE=2, SPAWN_TYPE=3, RANDOM=4, DISTANCE=5, DAMAGE=6, 
		HEALTH_CHECK=7, DIRECTION=8, NAME_T=9, TRAP=10, MONSTER=11, PLAYER=12, 
		PLACE_T=13, ROUND=14, NEAR=15, IS=16, ME=17, IF=18, TO=19, WHILE=20, HEALTH=21, 
		ALIVE=22, MOVE=23, ON=24, SHOOT=25, SPAWN=26, TELEPORT_T=27, PARTNER=28, 
		HEAL=29, FROM=30, WHEN=31, DIE=32, STAY=33, AT=34, EQUALS=35, ABSOLUTE=36, 
		NEGATE=37, BOOLCONNECTER=38, COMPARE=39, NUMCOMPARE=40, NUMCONNECTERMULTIP=41, 
		NUMCONNECTERADD=42, PARENTHESISSTART=43, PARENTHESISCLOSE=44, BRACKETCLOSE=45, 
		BRACKETSTART=46, COLON=47, SEMI=48, COMMA=49, NUMBER=50, DOT=51, ID=52, 
		WS=53;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "RANDOM", "DISTANCE", "DAMAGE", 
		"HEALTH_CHECK", "DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", "PLACE_T", 
		"ROUND", "NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", "ALIVE", "MOVE", 
		"ON", "SHOOT", "SPAWN", "TELEPORT_T", "PARTNER", "HEAL", "FROM", "WHEN", 
		"DIE", "STAY", "AT", "EQUALS", "ABSOLUTE", "NEGATE", "BOOLCONNECTER", 
		"COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", "NUMCONNECTERADD", "PARENTHESISSTART", 
		"PARENTHESISCLOSE", "BRACKETCLOSE", "BRACKETSTART", "COLON", "SEMI", "COMMA", 
		"NUMBER", "DOT", "ID", "WS"
	};


	public DynamicEnemyGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'teleport_place'", "'spawn_place'", "'spawn_type'", "'random'", 
		"'distance'", "'damage'", "'health_check'", null, "'name'", "'trap'", 
		"'monster'", "'player'", "'place'", "'round'", "'near'", "'is'", "'me'", 
		"'if'", "'to'", "'while'", "'health'", "'alive'", "'move'", "'on'", "'shoot'", 
		"'spawn'", "'teleport'", "'partner'", "'heal'", "'from'", "'when'", "'die'", 
		"'stay'", "'at'", "'='", "'|'", "'!'", null, null, null, null, null, "'('", 
		"')'", "'}'", "'{'", "':'", "';'", "','", null, "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "RANDOM", "DISTANCE", 
		"DAMAGE", "HEALTH_CHECK", "DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", 
		"PLACE_T", "ROUND", "NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", 
		"ALIVE", "MOVE", "ON", "SHOOT", "SPAWN", "TELEPORT_T", "PARTNER", "HEAL", 
		"FROM", "WHEN", "DIE", "STAY", "AT", "EQUALS", "ABSOLUTE", "NEGATE", "BOOLCONNECTER", 
		"COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", "NUMCONNECTERADD", "PARENTHESISSTART", 
		"PARENTHESISCLOSE", "BRACKETCLOSE", "BRACKETSTART", "COLON", "SEMI", "COMMA", 
		"NUMBER", "DOT", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DynamicEnemyGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x37\x182\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x3\x2"+
		"\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
		"\b\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3"+
		"\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12"+
		"\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F"+
		"\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3\"\x3\"\x3"+
		"\"\x3\"\x3\"\x3#\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3\'\x3\'\x5"+
		"\'\x14D\n\'\x3(\x3(\x3(\x3(\x5(\x153\n(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3"+
		",\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x32\x3\x32\x3"+
		"\x33\x6\x33\x16A\n\x33\r\x33\xE\x33\x16B\x3\x33\x3\x33\x6\x33\x170\n\x33"+
		"\r\x33\xE\x33\x171\x5\x33\x174\n\x33\x3\x34\x3\x34\x3\x35\x3\x35\a\x35"+
		"\x17A\n\x35\f\x35\xE\x35\x17D\v\x35\x3\x36\x3\x36\x3\x36\x3\x36\x2\x2"+
		"\x2\x37\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2"+
		"\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!"+
		"\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2"+
		"-Y\x2.[\x2/]\x2\x30_\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i"+
		"\x2\x36k\x2\x37\x3\x2\n\x6\x2\x44\x44HHNNTT\x4\x2>>@@\x5\x2\'\',,\x31"+
		"\x31\x4\x2--//\x3\x2\x32;\x4\x2\x43\\\x63|\x6\x2\x32;\x43\\\x61\x61\x63"+
		"|\x5\x2\v\f\xF\xF\"\"\x187\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2"+
		"\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/"+
		"\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2"+
		"\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2"+
		"\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2"+
		"\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x3m\x3\x2\x2\x2\x5|\x3\x2\x2\x2\a"+
		"\x88\x3\x2\x2\x2\t\x93\x3\x2\x2\x2\v\x9A\x3\x2\x2\x2\r\xA3\x3\x2\x2\x2"+
		"\xF\xAA\x3\x2\x2\x2\x11\xB7\x3\x2\x2\x2\x13\xB9\x3\x2\x2\x2\x15\xBE\x3"+
		"\x2\x2\x2\x17\xC3\x3\x2\x2\x2\x19\xCB\x3\x2\x2\x2\x1B\xD2\x3\x2\x2\x2"+
		"\x1D\xD8\x3\x2\x2\x2\x1F\xDE\x3\x2\x2\x2!\xE3\x3\x2\x2\x2#\xE6\x3\x2\x2"+
		"\x2%\xE9\x3\x2\x2\x2\'\xEC\x3\x2\x2\x2)\xEF\x3\x2\x2\x2+\xF5\x3\x2\x2"+
		"\x2-\xFC\x3\x2\x2\x2/\x102\x3\x2\x2\x2\x31\x107\x3\x2\x2\x2\x33\x10A\x3"+
		"\x2\x2\x2\x35\x110\x3\x2\x2\x2\x37\x116\x3\x2\x2\x2\x39\x11F\x3\x2\x2"+
		"\x2;\x127\x3\x2\x2\x2=\x12C\x3\x2\x2\x2?\x131\x3\x2\x2\x2\x41\x136\x3"+
		"\x2\x2\x2\x43\x13A\x3\x2\x2\x2\x45\x13F\x3\x2\x2\x2G\x142\x3\x2\x2\x2"+
		"I\x144\x3\x2\x2\x2K\x146\x3\x2\x2\x2M\x14C\x3\x2\x2\x2O\x152\x3\x2\x2"+
		"\x2Q\x154\x3\x2\x2\x2S\x156\x3\x2\x2\x2U\x158\x3\x2\x2\x2W\x15A\x3\x2"+
		"\x2\x2Y\x15C\x3\x2\x2\x2[\x15E\x3\x2\x2\x2]\x160\x3\x2\x2\x2_\x162\x3"+
		"\x2\x2\x2\x61\x164\x3\x2\x2\x2\x63\x166\x3\x2\x2\x2\x65\x169\x3\x2\x2"+
		"\x2g\x175\x3\x2\x2\x2i\x177\x3\x2\x2\x2k\x17E\x3\x2\x2\x2mn\av\x2\x2n"+
		"o\ag\x2\x2op\an\x2\x2pq\ag\x2\x2qr\ar\x2\x2rs\aq\x2\x2st\at\x2\x2tu\a"+
		"v\x2\x2uv\a\x61\x2\x2vw\ar\x2\x2wx\an\x2\x2xy\a\x63\x2\x2yz\a\x65\x2\x2"+
		"z{\ag\x2\x2{\x4\x3\x2\x2\x2|}\au\x2\x2}~\ar\x2\x2~\x7F\a\x63\x2\x2\x7F"+
		"\x80\ay\x2\x2\x80\x81\ap\x2\x2\x81\x82\a\x61\x2\x2\x82\x83\ar\x2\x2\x83"+
		"\x84\an\x2\x2\x84\x85\a\x63\x2\x2\x85\x86\a\x65\x2\x2\x86\x87\ag\x2\x2"+
		"\x87\x6\x3\x2\x2\x2\x88\x89\au\x2\x2\x89\x8A\ar\x2\x2\x8A\x8B\a\x63\x2"+
		"\x2\x8B\x8C\ay\x2\x2\x8C\x8D\ap\x2\x2\x8D\x8E\a\x61\x2\x2\x8E\x8F\av\x2"+
		"\x2\x8F\x90\a{\x2\x2\x90\x91\ar\x2\x2\x91\x92\ag\x2\x2\x92\b\x3\x2\x2"+
		"\x2\x93\x94\at\x2\x2\x94\x95\a\x63\x2\x2\x95\x96\ap\x2\x2\x96\x97\a\x66"+
		"\x2\x2\x97\x98\aq\x2\x2\x98\x99\ao\x2\x2\x99\n\x3\x2\x2\x2\x9A\x9B\a\x66"+
		"\x2\x2\x9B\x9C\ak\x2\x2\x9C\x9D\au\x2\x2\x9D\x9E\av\x2\x2\x9E\x9F\a\x63"+
		"\x2\x2\x9F\xA0\ap\x2\x2\xA0\xA1\a\x65\x2\x2\xA1\xA2\ag\x2\x2\xA2\f\x3"+
		"\x2\x2\x2\xA3\xA4\a\x66\x2\x2\xA4\xA5\a\x63\x2\x2\xA5\xA6\ao\x2\x2\xA6"+
		"\xA7\a\x63\x2\x2\xA7\xA8\ai\x2\x2\xA8\xA9\ag\x2\x2\xA9\xE\x3\x2\x2\x2"+
		"\xAA\xAB\aj\x2\x2\xAB\xAC\ag\x2\x2\xAC\xAD\a\x63\x2\x2\xAD\xAE\an\x2\x2"+
		"\xAE\xAF\av\x2\x2\xAF\xB0\aj\x2\x2\xB0\xB1\a\x61\x2\x2\xB1\xB2\a\x65\x2"+
		"\x2\xB2\xB3\aj\x2\x2\xB3\xB4\ag\x2\x2\xB4\xB5\a\x65\x2\x2\xB5\xB6\am\x2"+
		"\x2\xB6\x10\x3\x2\x2\x2\xB7\xB8\t\x2\x2\x2\xB8\x12\x3\x2\x2\x2\xB9\xBA"+
		"\ap\x2\x2\xBA\xBB\a\x63\x2\x2\xBB\xBC\ao\x2\x2\xBC\xBD\ag\x2\x2\xBD\x14"+
		"\x3\x2\x2\x2\xBE\xBF\av\x2\x2\xBF\xC0\at\x2\x2\xC0\xC1\a\x63\x2\x2\xC1"+
		"\xC2\ar\x2\x2\xC2\x16\x3\x2\x2\x2\xC3\xC4\ao\x2\x2\xC4\xC5\aq\x2\x2\xC5"+
		"\xC6\ap\x2\x2\xC6\xC7\au\x2\x2\xC7\xC8\av\x2\x2\xC8\xC9\ag\x2\x2\xC9\xCA"+
		"\at\x2\x2\xCA\x18\x3\x2\x2\x2\xCB\xCC\ar\x2\x2\xCC\xCD\an\x2\x2\xCD\xCE"+
		"\a\x63\x2\x2\xCE\xCF\a{\x2\x2\xCF\xD0\ag\x2\x2\xD0\xD1\at\x2\x2\xD1\x1A"+
		"\x3\x2\x2\x2\xD2\xD3\ar\x2\x2\xD3\xD4\an\x2\x2\xD4\xD5\a\x63\x2\x2\xD5"+
		"\xD6\a\x65\x2\x2\xD6\xD7\ag\x2\x2\xD7\x1C\x3\x2\x2\x2\xD8\xD9\at\x2\x2"+
		"\xD9\xDA\aq\x2\x2\xDA\xDB\aw\x2\x2\xDB\xDC\ap\x2\x2\xDC\xDD\a\x66\x2\x2"+
		"\xDD\x1E\x3\x2\x2\x2\xDE\xDF\ap\x2\x2\xDF\xE0\ag\x2\x2\xE0\xE1\a\x63\x2"+
		"\x2\xE1\xE2\at\x2\x2\xE2 \x3\x2\x2\x2\xE3\xE4\ak\x2\x2\xE4\xE5\au\x2\x2"+
		"\xE5\"\x3\x2\x2\x2\xE6\xE7\ao\x2\x2\xE7\xE8\ag\x2\x2\xE8$\x3\x2\x2\x2"+
		"\xE9\xEA\ak\x2\x2\xEA\xEB\ah\x2\x2\xEB&\x3\x2\x2\x2\xEC\xED\av\x2\x2\xED"+
		"\xEE\aq\x2\x2\xEE(\x3\x2\x2\x2\xEF\xF0\ay\x2\x2\xF0\xF1\aj\x2\x2\xF1\xF2"+
		"\ak\x2\x2\xF2\xF3\an\x2\x2\xF3\xF4\ag\x2\x2\xF4*\x3\x2\x2\x2\xF5\xF6\a"+
		"j\x2\x2\xF6\xF7\ag\x2\x2\xF7\xF8\a\x63\x2\x2\xF8\xF9\an\x2\x2\xF9\xFA"+
		"\av\x2\x2\xFA\xFB\aj\x2\x2\xFB,\x3\x2\x2\x2\xFC\xFD\a\x63\x2\x2\xFD\xFE"+
		"\an\x2\x2\xFE\xFF\ak\x2\x2\xFF\x100\ax\x2\x2\x100\x101\ag\x2\x2\x101."+
		"\x3\x2\x2\x2\x102\x103\ao\x2\x2\x103\x104\aq\x2\x2\x104\x105\ax\x2\x2"+
		"\x105\x106\ag\x2\x2\x106\x30\x3\x2\x2\x2\x107\x108\aq\x2\x2\x108\x109"+
		"\ap\x2\x2\x109\x32\x3\x2\x2\x2\x10A\x10B\au\x2\x2\x10B\x10C\aj\x2\x2\x10C"+
		"\x10D\aq\x2\x2\x10D\x10E\aq\x2\x2\x10E\x10F\av\x2\x2\x10F\x34\x3\x2\x2"+
		"\x2\x110\x111\au\x2\x2\x111\x112\ar\x2\x2\x112\x113\a\x63\x2\x2\x113\x114"+
		"\ay\x2\x2\x114\x115\ap\x2\x2\x115\x36\x3\x2\x2\x2\x116\x117\av\x2\x2\x117"+
		"\x118\ag\x2\x2\x118\x119\an\x2\x2\x119\x11A\ag\x2\x2\x11A\x11B\ar\x2\x2"+
		"\x11B\x11C\aq\x2\x2\x11C\x11D\at\x2\x2\x11D\x11E\av\x2\x2\x11E\x38\x3"+
		"\x2\x2\x2\x11F\x120\ar\x2\x2\x120\x121\a\x63\x2\x2\x121\x122\at\x2\x2"+
		"\x122\x123\av\x2\x2\x123\x124\ap\x2\x2\x124\x125\ag\x2\x2\x125\x126\a"+
		"t\x2\x2\x126:\x3\x2\x2\x2\x127\x128\aj\x2\x2\x128\x129\ag\x2\x2\x129\x12A"+
		"\a\x63\x2\x2\x12A\x12B\an\x2\x2\x12B<\x3\x2\x2\x2\x12C\x12D\ah\x2\x2\x12D"+
		"\x12E\at\x2\x2\x12E\x12F\aq\x2\x2\x12F\x130\ao\x2\x2\x130>\x3\x2\x2\x2"+
		"\x131\x132\ay\x2\x2\x132\x133\aj\x2\x2\x133\x134\ag\x2\x2\x134\x135\a"+
		"p\x2\x2\x135@\x3\x2\x2\x2\x136\x137\a\x66\x2\x2\x137\x138\ak\x2\x2\x138"+
		"\x139\ag\x2\x2\x139\x42\x3\x2\x2\x2\x13A\x13B\au\x2\x2\x13B\x13C\av\x2"+
		"\x2\x13C\x13D\a\x63\x2\x2\x13D\x13E\a{\x2\x2\x13E\x44\x3\x2\x2\x2\x13F"+
		"\x140\a\x63\x2\x2\x140\x141\av\x2\x2\x141\x46\x3\x2\x2\x2\x142\x143\a"+
		"?\x2\x2\x143H\x3\x2\x2\x2\x144\x145\a~\x2\x2\x145J\x3\x2\x2\x2\x146\x147"+
		"\a#\x2\x2\x147L\x3\x2\x2\x2\x148\x149\a~\x2\x2\x149\x14D\a~\x2\x2\x14A"+
		"\x14B\a(\x2\x2\x14B\x14D\a(\x2\x2\x14C\x148\x3\x2\x2\x2\x14C\x14A\x3\x2"+
		"\x2\x2\x14DN\x3\x2\x2\x2\x14E\x14F\a?\x2\x2\x14F\x153\a?\x2\x2\x150\x151"+
		"\a#\x2\x2\x151\x153\a?\x2\x2\x152\x14E\x3\x2\x2\x2\x152\x150\x3\x2\x2"+
		"\x2\x153P\x3\x2\x2\x2\x154\x155\t\x3\x2\x2\x155R\x3\x2\x2\x2\x156\x157"+
		"\t\x4\x2\x2\x157T\x3\x2\x2\x2\x158\x159\t\x5\x2\x2\x159V\x3\x2\x2\x2\x15A"+
		"\x15B\a*\x2\x2\x15BX\x3\x2\x2\x2\x15C\x15D\a+\x2\x2\x15DZ\x3\x2\x2\x2"+
		"\x15E\x15F\a\x7F\x2\x2\x15F\\\x3\x2\x2\x2\x160\x161\a}\x2\x2\x161^\x3"+
		"\x2\x2\x2\x162\x163\a<\x2\x2\x163`\x3\x2\x2\x2\x164\x165\a=\x2\x2\x165"+
		"\x62\x3\x2\x2\x2\x166\x167\a.\x2\x2\x167\x64\x3\x2\x2\x2\x168\x16A\t\x6"+
		"\x2\x2\x169\x168\x3\x2\x2\x2\x16A\x16B\x3\x2\x2\x2\x16B\x169\x3\x2\x2"+
		"\x2\x16B\x16C\x3\x2\x2\x2\x16C\x173\x3\x2\x2\x2\x16D\x16F\x5g\x34\x2\x16E"+
		"\x170\t\x6\x2\x2\x16F\x16E\x3\x2\x2\x2\x170\x171\x3\x2\x2\x2\x171\x16F"+
		"\x3\x2\x2\x2\x171\x172\x3\x2\x2\x2\x172\x174\x3\x2\x2\x2\x173\x16D\x3"+
		"\x2\x2\x2\x173\x174\x3\x2\x2\x2\x174\x66\x3\x2\x2\x2\x175\x176\a\x30\x2"+
		"\x2\x176h\x3\x2\x2\x2\x177\x17B\t\a\x2\x2\x178\x17A\t\b\x2\x2\x179\x178"+
		"\x3\x2\x2\x2\x17A\x17D\x3\x2\x2\x2\x17B\x179\x3\x2\x2\x2\x17B\x17C\x3"+
		"\x2\x2\x2\x17Cj\x3\x2\x2\x2\x17D\x17B\x3\x2\x2\x2\x17E\x17F\t\t\x2\x2"+
		"\x17F\x180\x3\x2\x2\x2\x180\x181\b\x36\x2\x2\x181l\x3\x2\x2\x2\t\x2\x14C"+
		"\x152\x16B\x171\x173\x17B\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LabWork1github
