//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1github\LabWork1github\g4 files\DynamicEnemyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1github {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class DynamicEnemyGrammarLexer : Lexer {
	public const int
		TELEPORT_PLACE=1, SPAWN_PLACE=2, SPAWN_TYPE=3, RANDOM=4, DISTANCE=5, DAMAGE=6, 
		DIRECTION=7, NAME_T=8, TRAP=9, MONSTER=10, PLAYER=11, PLACE_T=12, ROUND=13, 
		NEAR=14, IS=15, ME=16, IF=17, TO=18, WHILE=19, HEALTH=20, ALIVE=21, MOVE=22, 
		ON=23, SHOOT=24, SPAWN=25, TELEPORT_T=26, HEAL=27, EQUALS=28, ABSOLUTE=29, 
		NEGATE=30, BOOLCONNECTER=31, COMPARE=32, NUMCOMPARE=33, NUMCONNECTERMULTIP=34, 
		NUMCONNECTERADD=35, PARENTHESISSTART=36, PARENTHESISCLOSE=37, BRACKETCLOSE=38, 
		BRACKETSTART=39, COLON=40, SEMI=41, COMMA=42, NUMBER=43, DOT=44, ID=45, 
		WS=46;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "RANDOM", "DISTANCE", "DAMAGE", 
		"DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", "PLACE_T", "ROUND", 
		"NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", "ALIVE", "MOVE", "ON", 
		"SHOOT", "SPAWN", "TELEPORT_T", "HEAL", "EQUALS", "ABSOLUTE", "NEGATE", 
		"BOOLCONNECTER", "COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", "NUMCONNECTERADD", 
		"PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", "BRACKETSTART", 
		"COLON", "SEMI", "COMMA", "NUMBER", "DOT", "ID", "WS"
	};


	public DynamicEnemyGrammarLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'teleport_place'", "'spawn_place'", "'spawn_type'", "'random'", 
		"'distance'", "'damage'", null, "'name'", "'trap'", "'monster'", "'player'", 
		"'place'", "'round'", "'near'", "'is'", "'me'", "'if'", "'to'", "'while'", 
		"'health'", "'alive'", "'move'", "'on'", "'shoot'", "'spawn'", "'teleport'", 
		"'heal'", "'='", "'|'", "'!'", null, null, null, null, null, "'('", "')'", 
		"'}'", "'{'", "':'", "';'", "','", null, "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "TELEPORT_PLACE", "SPAWN_PLACE", "SPAWN_TYPE", "RANDOM", "DISTANCE", 
		"DAMAGE", "DIRECTION", "NAME_T", "TRAP", "MONSTER", "PLAYER", "PLACE_T", 
		"ROUND", "NEAR", "IS", "ME", "IF", "TO", "WHILE", "HEALTH", "ALIVE", "MOVE", 
		"ON", "SHOOT", "SPAWN", "TELEPORT_T", "HEAL", "EQUALS", "ABSOLUTE", "NEGATE", 
		"BOOLCONNECTER", "COMPARE", "NUMCOMPARE", "NUMCONNECTERMULTIP", "NUMCONNECTERADD", 
		"PARENTHESISSTART", "PARENTHESISCLOSE", "BRACKETCLOSE", "BRACKETSTART", 
		"COLON", "SEMI", "COMMA", "NUMBER", "DOT", "ID", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "DynamicEnemyGrammar.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x30\x149\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x3\x2\x3\x2\x3\x2\x3\x2\x3"+
		"\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\x6\x3"+
		"\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3"+
		"\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3"+
		"\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3"+
		"\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15"+
		"\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18"+
		"\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B"+
		"\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E"+
		"\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x5 \x114\n \x3!\x3!\x3!\x3!\x5!\x11A\n"+
		"!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)"+
		"\x3*\x3*\x3+\x3+\x3,\x6,\x131\n,\r,\xE,\x132\x3,\x3,\x6,\x137\n,\r,\xE"+
		",\x138\x5,\x13B\n,\x3-\x3-\x3.\x3.\a.\x141\n.\f.\xE.\x144\v.\x3/\x3/\x3"+
		"/\x3/\x2\x2\x2\x30\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF"+
		"\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10"+
		"\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/"+
		"\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F"+
		"=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2"+
		"+U\x2,W\x2-Y\x2.[\x2/]\x2\x30\x3\x2\n\x6\x2\x44\x44HHNNTT\x4\x2>>@@\x5"+
		"\x2\'\',,\x31\x31\x4\x2--//\x3\x2\x32;\x4\x2\x43\\\x63|\x6\x2\x32;\x43"+
		"\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x14E\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2"+
		"=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2"+
		"\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3"+
		"\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2"+
		"\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x3"+
		"_\x3\x2\x2\x2\x5n\x3\x2\x2\x2\az\x3\x2\x2\x2\t\x85\x3\x2\x2\x2\v\x8C\x3"+
		"\x2\x2\x2\r\x95\x3\x2\x2\x2\xF\x9C\x3\x2\x2\x2\x11\x9E\x3\x2\x2\x2\x13"+
		"\xA3\x3\x2\x2\x2\x15\xA8\x3\x2\x2\x2\x17\xB0\x3\x2\x2\x2\x19\xB7\x3\x2"+
		"\x2\x2\x1B\xBD\x3\x2\x2\x2\x1D\xC3\x3\x2\x2\x2\x1F\xC8\x3\x2\x2\x2!\xCB"+
		"\x3\x2\x2\x2#\xCE\x3\x2\x2\x2%\xD1\x3\x2\x2\x2\'\xD4\x3\x2\x2\x2)\xDA"+
		"\x3\x2\x2\x2+\xE1\x3\x2\x2\x2-\xE7\x3\x2\x2\x2/\xEC\x3\x2\x2\x2\x31\xEF"+
		"\x3\x2\x2\x2\x33\xF5\x3\x2\x2\x2\x35\xFB\x3\x2\x2\x2\x37\x104\x3\x2\x2"+
		"\x2\x39\x109\x3\x2\x2\x2;\x10B\x3\x2\x2\x2=\x10D\x3\x2\x2\x2?\x113\x3"+
		"\x2\x2\x2\x41\x119\x3\x2\x2\x2\x43\x11B\x3\x2\x2\x2\x45\x11D\x3\x2\x2"+
		"\x2G\x11F\x3\x2\x2\x2I\x121\x3\x2\x2\x2K\x123\x3\x2\x2\x2M\x125\x3\x2"+
		"\x2\x2O\x127\x3\x2\x2\x2Q\x129\x3\x2\x2\x2S\x12B\x3\x2\x2\x2U\x12D\x3"+
		"\x2\x2\x2W\x130\x3\x2\x2\x2Y\x13C\x3\x2\x2\x2[\x13E\x3\x2\x2\x2]\x145"+
		"\x3\x2\x2\x2_`\av\x2\x2`\x61\ag\x2\x2\x61\x62\an\x2\x2\x62\x63\ag\x2\x2"+
		"\x63\x64\ar\x2\x2\x64\x65\aq\x2\x2\x65\x66\at\x2\x2\x66g\av\x2\x2gh\a"+
		"\x61\x2\x2hi\ar\x2\x2ij\an\x2\x2jk\a\x63\x2\x2kl\a\x65\x2\x2lm\ag\x2\x2"+
		"m\x4\x3\x2\x2\x2no\au\x2\x2op\ar\x2\x2pq\a\x63\x2\x2qr\ay\x2\x2rs\ap\x2"+
		"\x2st\a\x61\x2\x2tu\ar\x2\x2uv\an\x2\x2vw\a\x63\x2\x2wx\a\x65\x2\x2xy"+
		"\ag\x2\x2y\x6\x3\x2\x2\x2z{\au\x2\x2{|\ar\x2\x2|}\a\x63\x2\x2}~\ay\x2"+
		"\x2~\x7F\ap\x2\x2\x7F\x80\a\x61\x2\x2\x80\x81\av\x2\x2\x81\x82\a{\x2\x2"+
		"\x82\x83\ar\x2\x2\x83\x84\ag\x2\x2\x84\b\x3\x2\x2\x2\x85\x86\at\x2\x2"+
		"\x86\x87\a\x63\x2\x2\x87\x88\ap\x2\x2\x88\x89\a\x66\x2\x2\x89\x8A\aq\x2"+
		"\x2\x8A\x8B\ao\x2\x2\x8B\n\x3\x2\x2\x2\x8C\x8D\a\x66\x2\x2\x8D\x8E\ak"+
		"\x2\x2\x8E\x8F\au\x2\x2\x8F\x90\av\x2\x2\x90\x91\a\x63\x2\x2\x91\x92\a"+
		"p\x2\x2\x92\x93\a\x65\x2\x2\x93\x94\ag\x2\x2\x94\f\x3\x2\x2\x2\x95\x96"+
		"\a\x66\x2\x2\x96\x97\a\x63\x2\x2\x97\x98\ao\x2\x2\x98\x99\a\x63\x2\x2"+
		"\x99\x9A\ai\x2\x2\x9A\x9B\ag\x2\x2\x9B\xE\x3\x2\x2\x2\x9C\x9D\t\x2\x2"+
		"\x2\x9D\x10\x3\x2\x2\x2\x9E\x9F\ap\x2\x2\x9F\xA0\a\x63\x2\x2\xA0\xA1\a"+
		"o\x2\x2\xA1\xA2\ag\x2\x2\xA2\x12\x3\x2\x2\x2\xA3\xA4\av\x2\x2\xA4\xA5"+
		"\at\x2\x2\xA5\xA6\a\x63\x2\x2\xA6\xA7\ar\x2\x2\xA7\x14\x3\x2\x2\x2\xA8"+
		"\xA9\ao\x2\x2\xA9\xAA\aq\x2\x2\xAA\xAB\ap\x2\x2\xAB\xAC\au\x2\x2\xAC\xAD"+
		"\av\x2\x2\xAD\xAE\ag\x2\x2\xAE\xAF\at\x2\x2\xAF\x16\x3\x2\x2\x2\xB0\xB1"+
		"\ar\x2\x2\xB1\xB2\an\x2\x2\xB2\xB3\a\x63\x2\x2\xB3\xB4\a{\x2\x2\xB4\xB5"+
		"\ag\x2\x2\xB5\xB6\at\x2\x2\xB6\x18\x3\x2\x2\x2\xB7\xB8\ar\x2\x2\xB8\xB9"+
		"\an\x2\x2\xB9\xBA\a\x63\x2\x2\xBA\xBB\a\x65\x2\x2\xBB\xBC\ag\x2\x2\xBC"+
		"\x1A\x3\x2\x2\x2\xBD\xBE\at\x2\x2\xBE\xBF\aq\x2\x2\xBF\xC0\aw\x2\x2\xC0"+
		"\xC1\ap\x2\x2\xC1\xC2\a\x66\x2\x2\xC2\x1C\x3\x2\x2\x2\xC3\xC4\ap\x2\x2"+
		"\xC4\xC5\ag\x2\x2\xC5\xC6\a\x63\x2\x2\xC6\xC7\at\x2\x2\xC7\x1E\x3\x2\x2"+
		"\x2\xC8\xC9\ak\x2\x2\xC9\xCA\au\x2\x2\xCA \x3\x2\x2\x2\xCB\xCC\ao\x2\x2"+
		"\xCC\xCD\ag\x2\x2\xCD\"\x3\x2\x2\x2\xCE\xCF\ak\x2\x2\xCF\xD0\ah\x2\x2"+
		"\xD0$\x3\x2\x2\x2\xD1\xD2\av\x2\x2\xD2\xD3\aq\x2\x2\xD3&\x3\x2\x2\x2\xD4"+
		"\xD5\ay\x2\x2\xD5\xD6\aj\x2\x2\xD6\xD7\ak\x2\x2\xD7\xD8\an\x2\x2\xD8\xD9"+
		"\ag\x2\x2\xD9(\x3\x2\x2\x2\xDA\xDB\aj\x2\x2\xDB\xDC\ag\x2\x2\xDC\xDD\a"+
		"\x63\x2\x2\xDD\xDE\an\x2\x2\xDE\xDF\av\x2\x2\xDF\xE0\aj\x2\x2\xE0*\x3"+
		"\x2\x2\x2\xE1\xE2\a\x63\x2\x2\xE2\xE3\an\x2\x2\xE3\xE4\ak\x2\x2\xE4\xE5"+
		"\ax\x2\x2\xE5\xE6\ag\x2\x2\xE6,\x3\x2\x2\x2\xE7\xE8\ao\x2\x2\xE8\xE9\a"+
		"q\x2\x2\xE9\xEA\ax\x2\x2\xEA\xEB\ag\x2\x2\xEB.\x3\x2\x2\x2\xEC\xED\aq"+
		"\x2\x2\xED\xEE\ap\x2\x2\xEE\x30\x3\x2\x2\x2\xEF\xF0\au\x2\x2\xF0\xF1\a"+
		"j\x2\x2\xF1\xF2\aq\x2\x2\xF2\xF3\aq\x2\x2\xF3\xF4\av\x2\x2\xF4\x32\x3"+
		"\x2\x2\x2\xF5\xF6\au\x2\x2\xF6\xF7\ar\x2\x2\xF7\xF8\a\x63\x2\x2\xF8\xF9"+
		"\ay\x2\x2\xF9\xFA\ap\x2\x2\xFA\x34\x3\x2\x2\x2\xFB\xFC\av\x2\x2\xFC\xFD"+
		"\ag\x2\x2\xFD\xFE\an\x2\x2\xFE\xFF\ag\x2\x2\xFF\x100\ar\x2\x2\x100\x101"+
		"\aq\x2\x2\x101\x102\at\x2\x2\x102\x103\av\x2\x2\x103\x36\x3\x2\x2\x2\x104"+
		"\x105\aj\x2\x2\x105\x106\ag\x2\x2\x106\x107\a\x63\x2\x2\x107\x108\an\x2"+
		"\x2\x108\x38\x3\x2\x2\x2\x109\x10A\a?\x2\x2\x10A:\x3\x2\x2\x2\x10B\x10C"+
		"\a~\x2\x2\x10C<\x3\x2\x2\x2\x10D\x10E\a#\x2\x2\x10E>\x3\x2\x2\x2\x10F"+
		"\x110\a~\x2\x2\x110\x114\a~\x2\x2\x111\x112\a(\x2\x2\x112\x114\a(\x2\x2"+
		"\x113\x10F\x3\x2\x2\x2\x113\x111\x3\x2\x2\x2\x114@\x3\x2\x2\x2\x115\x116"+
		"\a?\x2\x2\x116\x11A\a?\x2\x2\x117\x118\a#\x2\x2\x118\x11A\a?\x2\x2\x119"+
		"\x115\x3\x2\x2\x2\x119\x117\x3\x2\x2\x2\x11A\x42\x3\x2\x2\x2\x11B\x11C"+
		"\t\x3\x2\x2\x11C\x44\x3\x2\x2\x2\x11D\x11E\t\x4\x2\x2\x11E\x46\x3\x2\x2"+
		"\x2\x11F\x120\t\x5\x2\x2\x120H\x3\x2\x2\x2\x121\x122\a*\x2\x2\x122J\x3"+
		"\x2\x2\x2\x123\x124\a+\x2\x2\x124L\x3\x2\x2\x2\x125\x126\a\x7F\x2\x2\x126"+
		"N\x3\x2\x2\x2\x127\x128\a}\x2\x2\x128P\x3\x2\x2\x2\x129\x12A\a<\x2\x2"+
		"\x12AR\x3\x2\x2\x2\x12B\x12C\a=\x2\x2\x12CT\x3\x2\x2\x2\x12D\x12E\a.\x2"+
		"\x2\x12EV\x3\x2\x2\x2\x12F\x131\t\x6\x2\x2\x130\x12F\x3\x2\x2\x2\x131"+
		"\x132\x3\x2\x2\x2\x132\x130\x3\x2\x2\x2\x132\x133\x3\x2\x2\x2\x133\x13A"+
		"\x3\x2\x2\x2\x134\x136\x5Y-\x2\x135\x137\t\x6\x2\x2\x136\x135\x3\x2\x2"+
		"\x2\x137\x138\x3\x2\x2\x2\x138\x136\x3\x2\x2\x2\x138\x139\x3\x2\x2\x2"+
		"\x139\x13B\x3\x2\x2\x2\x13A\x134\x3\x2\x2\x2\x13A\x13B\x3\x2\x2\x2\x13B"+
		"X\x3\x2\x2\x2\x13C\x13D\a\x30\x2\x2\x13DZ\x3\x2\x2\x2\x13E\x142\t\a\x2"+
		"\x2\x13F\x141\t\b\x2\x2\x140\x13F\x3\x2\x2\x2\x141\x144\x3\x2\x2\x2\x142"+
		"\x140\x3\x2\x2\x2\x142\x143\x3\x2\x2\x2\x143\\\x3\x2\x2\x2\x144\x142\x3"+
		"\x2\x2\x2\x145\x146\t\t\x2\x2\x146\x147\x3\x2\x2\x2\x147\x148\b/\x2\x2"+
		"\x148^\x3\x2\x2\x2\t\x2\x113\x119\x132\x138\x13A\x142\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace LabWork1github
