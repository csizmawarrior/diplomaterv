//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1\LabWork1\trapGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1 {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="trapGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ItrapGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] trapGrammarParser.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] trapGrammarParser.DefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] trapGrammarParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] trapGrammarParser.NameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] trapGrammarParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] trapGrammarParser.StatementListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] trapGrammarParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] trapGrammarParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlace([NotNull] trapGrammarParser.PlaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlace([NotNull] trapGrammarParser.PlaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameDeclaration([NotNull] trapGrammarParser.NameDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameDeclaration([NotNull] trapGrammarParser.NameDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.effectDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEffectDeclaration([NotNull] trapGrammarParser.EffectDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.effectDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEffectDeclaration([NotNull] trapGrammarParser.EffectDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.circleMove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCircleMove([NotNull] trapGrammarParser.CircleMoveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.circleMove"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCircleMove([NotNull] trapGrammarParser.CircleMoveContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEffect([NotNull] trapGrammarParser.EffectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.effect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEffect([NotNull] trapGrammarParser.EffectContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.damage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDamage([NotNull] trapGrammarParser.DamageContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.damage"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDamage([NotNull] trapGrammarParser.DamageContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.heal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHeal([NotNull] trapGrammarParser.HealContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.heal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHeal([NotNull] trapGrammarParser.HealContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.enemySpawn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnemySpawn([NotNull] trapGrammarParser.EnemySpawnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.enemySpawn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnemySpawn([NotNull] trapGrammarParser.EnemySpawnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.teleport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTeleport([NotNull] trapGrammarParser.TeleportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.teleport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTeleport([NotNull] trapGrammarParser.TeleportContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.rangeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeDeclaration([NotNull] trapGrammarParser.RangeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.rangeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeDeclaration([NotNull] trapGrammarParser.RangeDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="trapGrammarParser.moveRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoveRoundDeclaration([NotNull] trapGrammarParser.MoveRoundDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="trapGrammarParser.moveRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoveRoundDeclaration([NotNull] trapGrammarParser.MoveRoundDeclarationContext context);
}
} // namespace LabWork1
