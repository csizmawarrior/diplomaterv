//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Dana\source\repos\LabWork1\LabWork1\enemyGrammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabWork1 {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="enemyGrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IenemyGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinition([NotNull] enemyGrammarParser.DefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinition([NotNull] enemyGrammarParser.DefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterName([NotNull] enemyGrammarParser.NameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.name"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitName([NotNull] enemyGrammarParser.NameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] enemyGrammarParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] enemyGrammarParser.StatementListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] enemyGrammarParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] enemyGrammarParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameDeclaration([NotNull] enemyGrammarParser.NameDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.nameDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameDeclaration([NotNull] enemyGrammarParser.NameDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.rangeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeDeclaration([NotNull] enemyGrammarParser.RangeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.rangeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeDeclaration([NotNull] enemyGrammarParser.RangeDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.moveRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMoveRoundDeclaration([NotNull] enemyGrammarParser.MoveRoundDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.moveRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMoveRoundDeclaration([NotNull] enemyGrammarParser.MoveRoundDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="enemyGrammarParser.shootRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShootRoundDeclaration([NotNull] enemyGrammarParser.ShootRoundDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="enemyGrammarParser.shootRoundDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShootRoundDeclaration([NotNull] enemyGrammarParser.ShootRoundDeclarationContext context);
}
} // namespace LabWork1
